name: ðŸ”¥ Parallel Smoke Tests

on:
  pull_request:

jobs:
  run-smoke-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: src

      - name: Validate composer.json and composer.lock
        run: |
          cd src && composer validate --strict --no-check-all

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: src/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer Dependencies
        run: |
          cd src && composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare test directories
        run: |
          cp -R src unit_tests
          cp -R src feature_tests
          mv src/.git .

      - name: Execute Tests in Parallel
        run: |
          mkdir -p test_results
          
          # Function to run tests
          run_tests() {
            local suite=$1
            local testsuite=$2
            local padding=""
            if [ "$suite" == "unit" ]; then
              padding="   "
            fi
            cd ${suite}_tests
            vendor/bin/pest --colors=always --stop-on-failure --log-junit="../test_results/${suite}_junit.xml" --testsuite="$testsuite" 2>&1 | sed -E "s/^/[${suite^^}]${padding} /"
          }
          
          # Run tests in parallel and combine output
          (run_tests unit UnitFramework) &
          (run_tests feature "FeatureHyde,FeatureFramework,Publications,Realtime Compiler") &
          
          # Wait for all background jobs to finish
          wait

      - name: Merge JUnit XML Reports
        run: |
          php -r '
          $files = glob("test_results/*_junit.xml");
          $totalTests = $totalAssertions = $totalTime = 0;
          foreach ($files as $file) {
              $xml = simplexml_load_file($file);
              $totalTests += (int)$xml->testsuite["tests"];
              $totalAssertions += (int)$xml->testsuite["assertions"];
              $totalTime += (float)$xml->testsuite["time"];
          }
          $output = sprintf(
              "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n  <testsuite name=\"%s\" tests=\"%d\" assertions=\"%d\" errors=\"0\" failures=\"0\" skipped=\"0\" time=\"%.6f\">\n  </testsuite>\n</testsuites>",
              "H:\\monorepo\\phpunit.xml.dist",
              $totalTests,
              $totalAssertions,
              $totalTime
          );
          file_put_contents("report.xml", $output);
          '

      - name: Ping statistics server with test results
        run: |
          curl https://raw.githubusercontent.com/hydephp/develop/6e9d17f31879f4ccda13a3fec4029c9663bccec0/monorepo/scripts/ping-openanalytics-testrunner.php -o ping.php
          php ping.php "Monorepo Smoke Tests" ${{ secrets.OPENANALYTICS_TOKEN }} ${{ github.ref_name  }}
